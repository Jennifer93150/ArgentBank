{"ast":null,"code":"import { createStore } from \"https://cdn.skypack.dev/redux@4.0.5\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n/**\n * State\n */\n\nconst initialState = {\n  userLoginInfo: {\n    email: \"\",\n    password: \"\"\n  },\n  userInfo: {\n    firstName: \"\",\n    lastName: \"\",\n    id: \"\"\n  },\n  token: null\n};\nexport const setToken = token => ({\n  type: \"setToken\",\n  payload: token\n});\nexport const setUserInfo = userInfo => ({\n  type: \"setUserInfo\",\n  payload: userInfo\n});\nexport const emptyState = () => ({\n  type: \"emptyState\"\n});\nexport const removeStorage = () => ({\n  type: \"removeStorage\"\n});\n/**\n * Reducer\n * @param {object} state \n * @param {string} action \n * @returns {object}\n */\n\nexport function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'setToken') {\n    return { ...state,\n      loading: false,\n      connected: true,\n      token: action.payload\n    };\n  }\n\n  if (action.type === 'setUserInfo') {\n    return { ...state,\n      userLoginInfo: {\n        email: action.payload.email,\n        password: action.payload.password\n      },\n      userInfo: {\n        firstName: action.payload.firstName,\n        lastName: action.payload.lastName,\n        id: action.payload.id\n      }\n    };\n  }\n\n  if (action.type === 'emptyState') {\n    return { ...state,\n      userLoginInfo: {\n        email: \"\",\n        password: \"\"\n      },\n      userInfo: {\n        firstName: \"\",\n        lastName: \"\",\n        id: \"\"\n      },\n      loading: true,\n      connected: false,\n      token: \"\"\n    };\n  }\n\n  if (action.type === 'removeStorage') {\n    storage.removeItem('persist:root');\n  } // Otherwise we return the state without changing it\n\n\n  return state;\n}\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, reducer); // We create the store with the state and the reducer\n\nexport const store = createStore(persistedReducer);\nexport const state = store.getState();\nexport const persistor = persistStore(store);","map":{"version":3,"names":["createStore","persistStore","persistReducer","storage","initialState","userLoginInfo","email","password","userInfo","firstName","lastName","id","token","setToken","type","payload","setUserInfo","emptyState","removeStorage","reducer","state","action","loading","connected","removeItem","persistConfig","key","persistedReducer","store","getState","persistor"],"sources":["/Users/jenniferbouhid/Desktop/ArgentBank/src/redux/store.js"],"sourcesContent":["import { createStore} from \"https://cdn.skypack.dev/redux@4.0.5\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n \n/**\n * State\n */\nconst initialState = {\n  userLoginInfo:{\n    email: \"\",\n    password: \"\",\n  },\n  userInfo:{\n    firstName: \"\",\n    lastName: \"\",\n    id: \"\",\n  },\n  token: null,\n};\n\nexport const setToken = (token) => ({ \n  type: \"setToken\",\n  payload: token,\n});\n\nexport const setUserInfo = (userInfo) => ({ \n  type: \"setUserInfo\",\n  payload: userInfo,\n});\n\nexport const emptyState = () => ({ \n  type: \"emptyState\",\n});\n\nexport const removeStorage = () => ({ \n  type: \"removeStorage\",\n});\n\n/**\n * Reducer\n * @param {object} state \n * @param {string} action \n * @returns {object}\n */\nexport function reducer(state = initialState, action) {\n  \n  if (action.type === 'setToken') {\n      return{\n        ...state,\n        loading: false,\n        connected: true, \n        token: action.payload,\n    }\n  }\n  if (action.type === 'setUserInfo') {\n    return{\n      ...state,\n      userLoginInfo:{\n        email: action.payload.email,\n        password: action.payload.password,\n      },\n      userInfo:{\n        firstName: action.payload.firstName,\n        lastName: action.payload.lastName,\n        id: action.payload.id,\n      }, \n    }\n  }\n  if (action.type === 'emptyState') {\n    return{\n      ...state,\n      userLoginInfo:{\n        email: \"\",\n        password: \"\",\n      },\n      userInfo:{\n        firstName: \"\",\n        lastName: \"\",\n        id: \"\",\n      },\n      loading: true,\n      connected: false,\n      token:\"\",\n    }\n    \n  }\n  if (action.type === 'removeStorage') {\n    storage.removeItem('persist:root');\n  }\n  // Otherwise we return the state without changing it\n  return state;\n}\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, reducer)\n\n// We create the store with the state and the reducer\nexport const store = createStore(persistedReducer);\nexport const state = store.getState();\nexport const persistor = persistStore(store);\n\n\n\n\n"],"mappings":"AAAA,SAASA,WAAT,QAA2B,qCAA3B;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA;AACA;AACA;;AACA,MAAMC,YAAY,GAAG;EACnBC,aAAa,EAAC;IACZC,KAAK,EAAE,EADK;IAEZC,QAAQ,EAAE;EAFE,CADK;EAKnBC,QAAQ,EAAC;IACPC,SAAS,EAAE,EADJ;IAEPC,QAAQ,EAAE,EAFH;IAGPC,EAAE,EAAE;EAHG,CALU;EAUnBC,KAAK,EAAE;AAVY,CAArB;AAaA,OAAO,MAAMC,QAAQ,GAAID,KAAD,KAAY;EAClCE,IAAI,EAAE,UAD4B;EAElCC,OAAO,EAAEH;AAFyB,CAAZ,CAAjB;AAKP,OAAO,MAAMI,WAAW,GAAIR,QAAD,KAAe;EACxCM,IAAI,EAAE,aADkC;EAExCC,OAAO,EAAEP;AAF+B,CAAf,CAApB;AAKP,OAAO,MAAMS,UAAU,GAAG,OAAO;EAC/BH,IAAI,EAAE;AADyB,CAAP,CAAnB;AAIP,OAAO,MAAMI,aAAa,GAAG,OAAO;EAClCJ,IAAI,EAAE;AAD4B,CAAP,CAAtB;AAIP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASK,OAAT,GAA+C;EAAA,IAA9BC,KAA8B,uEAAtBhB,YAAsB;EAAA,IAARiB,MAAQ;;EAEpD,IAAIA,MAAM,CAACP,IAAP,KAAgB,UAApB,EAAgC;IAC5B,OAAM,EACJ,GAAGM,KADC;MAEJE,OAAO,EAAE,KAFL;MAGJC,SAAS,EAAE,IAHP;MAIJX,KAAK,EAAES,MAAM,CAACN;IAJV,CAAN;EAMH;;EACD,IAAIM,MAAM,CAACP,IAAP,KAAgB,aAApB,EAAmC;IACjC,OAAM,EACJ,GAAGM,KADC;MAEJf,aAAa,EAAC;QACZC,KAAK,EAAEe,MAAM,CAACN,OAAP,CAAeT,KADV;QAEZC,QAAQ,EAAEc,MAAM,CAACN,OAAP,CAAeR;MAFb,CAFV;MAMJC,QAAQ,EAAC;QACPC,SAAS,EAAEY,MAAM,CAACN,OAAP,CAAeN,SADnB;QAEPC,QAAQ,EAAEW,MAAM,CAACN,OAAP,CAAeL,QAFlB;QAGPC,EAAE,EAAEU,MAAM,CAACN,OAAP,CAAeJ;MAHZ;IANL,CAAN;EAYD;;EACD,IAAIU,MAAM,CAACP,IAAP,KAAgB,YAApB,EAAkC;IAChC,OAAM,EACJ,GAAGM,KADC;MAEJf,aAAa,EAAC;QACZC,KAAK,EAAE,EADK;QAEZC,QAAQ,EAAE;MAFE,CAFV;MAMJC,QAAQ,EAAC;QACPC,SAAS,EAAE,EADJ;QAEPC,QAAQ,EAAE,EAFH;QAGPC,EAAE,EAAE;MAHG,CANL;MAWJW,OAAO,EAAE,IAXL;MAYJC,SAAS,EAAE,KAZP;MAaJX,KAAK,EAAC;IAbF,CAAN;EAgBD;;EACD,IAAIS,MAAM,CAACP,IAAP,KAAgB,eAApB,EAAqC;IACnCX,OAAO,CAACqB,UAAR,CAAmB,cAAnB;EACD,CA5CmD,CA6CpD;;;EACA,OAAOJ,KAAP;AACD;AAED,MAAMK,aAAa,GAAG;EACpBC,GAAG,EAAE,MADe;EAEpBvB;AAFoB,CAAtB;AAKA,MAAMwB,gBAAgB,GAAGzB,cAAc,CAACuB,aAAD,EAAgBN,OAAhB,CAAvC,C,CAEA;;AACA,OAAO,MAAMS,KAAK,GAAG5B,WAAW,CAAC2B,gBAAD,CAAzB;AACP,OAAO,MAAMP,KAAK,GAAGQ,KAAK,CAACC,QAAN,EAAd;AACP,OAAO,MAAMC,SAAS,GAAG7B,YAAY,CAAC2B,KAAD,CAA9B"},"metadata":{},"sourceType":"module"}